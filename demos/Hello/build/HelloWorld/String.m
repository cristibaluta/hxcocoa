//
//  String
//  HelloWorld
//
//  Source generated by Haxe Objective-C target
//

#import "String.h"

@implementation NSString ( String )

+ (NSString*)fromCharCode:(NSInteger)code {
	
	return [NSMutableString stringWithFormat:@"%C", code];
}
- (NSString*)toString {
	
	return [self description];
}
- (NSString*)substring:(NSInteger)startIndex endIndex:(NSInteger)endIndex {
	
	// Optional arguments
	if (!endIndex) endIndex = nil;
	
	if (endIndex == nil)  {
		endIndex = self.length;
	}
	else  {
		if (endIndex < 0)  {
			endIndex = 0;
		}
		else  {
			if (endIndex > self.length)  {
				endIndex = self.length;
			}
		}
	}
	if (startIndex < 0)  {
		startIndex = 0;
	}
	else  {
		if (startIndex > self.length)  {
			startIndex = self.length;
		}
	}
	if (startIndex > endIndex)  {
		
		NSInteger tmp = startIndex;
		startIndex = endIndex;
		endIndex = tmp;
	}
	return [self substr:startIndex len:endIndex - startIndex];
}
- (NSString*)substr:(NSInteger)pos len:(NSInteger)len {
	
	// Optional arguments
	if (!len) len = nil;
	
	if (len == 0)  {
		return @"";
	}
	NSInteger sl = self.length;
	if (len == nil)  {
		len = sl;
	}
	if (pos == nil)  {
		pos = 0;
	}
	if (pos != 0 && len < 0)  {
		return @"";
	}
	if (pos < 0)  {
		
		pos = sl + pos;
		if (pos < 0)  {
			pos = 0;
		}
	}
	else  {
		if (len < 0)  {
			len = sl + len - pos;
		}
	}
	if (pos + len > sl)  {
		len = sl - pos;
	}
	if (pos < 0 || len <= 0)  {
		return @"";
	}
	return [self substringFromIndex:pos];
}
- (NSMutableArray<id>*)split:(NSString*)delimiter {
	
	return [self componentsSeparatedByString:delimiter];
}
- (NSInteger)lastIndexOf:(NSString*)str startIndex:(NSInteger)startIndex {
	
	// Optional arguments
	if (!startIndex) startIndex = nil;
	
	if (startIndex == nil)  {
		startIndex = 0;
	}
	else  {
		startIndex = startIndex;
	}
	NSRange range = [self rangeOfString:str options:NSBackwardsSearch range:NSMakeRange(startIndex,self.length-startIndex)];
	if ( range.location != NSNotFound ) {
		return range.location;
	};
	return -1;
}
- (NSInteger)indexOf:(NSString*)str startIndex:(NSInteger)startIndex {
	
	// Optional arguments
	if (!startIndex) startIndex = nil;
	
	if (startIndex == nil)  {
		startIndex = 0;
	}
	else  {
		startIndex = startIndex;
	}
	NSRange range = [self rangeOfString:str options:NSLiteralSearch range:NSMakeRange(startIndex,self.length-startIndex)];
	if ( range.location != NSNotFound ) {
		return range.location;
	};
	return -1;
}
- (NSInteger)charCodeAt:(NSInteger)index {
	
	return [self characterAtIndex:index];
}
- (NSString*)charAt:(NSInteger)index {
	
	return nil;
}
- (NSString*)toLowerCase {
	
	return [self lowercaseString];
}
- (NSString*)toUpperCase {
	
	return [self uppercaseString];
}
// Please provide a getterBody for the property: length

- (id)init:(NSString*)string {
	
	self = [super init];
	return self;
}

@end
